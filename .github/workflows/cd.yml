name: CD

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (branch or tag) to deploy'
        required: false
      target:
        description: 'Which target to deploy (beta|release|auto)'
        required: false
        default: 'auto'
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  push:
    tags:
      - 'v*'

jobs:
  deploy-android:
    name: Deploy Android
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' &&
       (inputs.target == 'release' || inputs.target == 'auto') &&
       (inputs.ref == 'refs/heads/main' || startsWith(inputs.ref, 'refs/tags/v'))) ||
      (github.event_name == 'workflow_dispatch' &&
       (inputs.target == 'beta' || inputs.target == 'auto') &&
       (inputs.ref == 'refs/heads/develop' || inputs.ref == 'refs/heads/Fastlane-integration')) ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       (github.event.workflow_run.head_branch == 'main' ||
        github.event.workflow_run.head_branch == 'develop' ||
        github.event.workflow_run.head_branch == 'Fastlane-integration')) ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
        
    - name: Validate secrets
      run: |
        if [ -z "$ANDROID_KEYSTORE_PATH" ]; then echo "ANDROID_KEYSTORE_PATH is missing"; exit 1; fi
        if [ -z "$ANDROID_KEYSTORE_PASSWORD" ]; then echo "ANDROID_KEYSTORE_PASSWORD is missing"; exit 1; fi
        if [ -z "$ANDROID_KEY_ALIAS" ]; then echo "ANDROID_KEY_ALIAS is missing"; exit 1; fi
        if [ -z "$ANDROID_KEY_PASSWORD" ]; then echo "ANDROID_KEY_PASSWORD is missing"; exit 1; fi
        if [ -z "$GOOGLE_PLAY_SERVICE_ACCOUNT_JSON" ]; then echo "GOOGLE_PLAY_SERVICE_ACCOUNT_JSON is missing"; exit 1; fi
        echo "All Android secrets are present"
      env:
        ANDROID_KEYSTORE_PATH: ${{ secrets.ANDROID_KEYSTORE_PATH }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        
    - name: Build and deploy Android
      env:
        ANDROID_KEYSTORE_PATH: ${{ secrets.ANDROID_KEYSTORE_PATH }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      run: |
        bundle exec fastlane android release

  deploy-ios:
    name: Deploy iOS
    runs-on: macos-latest
    if: |
      (github.event_name == 'workflow_dispatch' &&
       (inputs.target == 'release' || inputs.target == 'auto') &&
       (inputs.ref == 'refs/heads/main' || startsWith(inputs.ref, 'refs/tags/v'))) ||
      (github.event_name == 'workflow_dispatch' &&
       (inputs.target == 'beta' || inputs.target == 'auto') &&
       (inputs.ref == 'refs/heads/develop' || inputs.ref == 'refs/heads/Fastlane-integration')) ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       (github.event.workflow_run.head_branch == 'main' ||
        github.event.workflow_run.head_branch == 'develop' ||
        github.event.workflow_run.head_branch == 'Fastlane-integration')) ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Setup Node.js for iOS build
      run: |
        # Create symlink for Node.js to fix React Native iOS build
        sudo ln -sf $(which node) /usr/local/bin/node
        node --version
        which node
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
        
    - name: Validate iOS secrets
      run: |
        if [ -z "$APPLE_ID" ]; then echo "APPLE_ID is missing"; exit 1; fi
        if [ -z "$APPLE_ID_PASSWORD" ]; then echo "APPLE_ID_PASSWORD is missing"; exit 1; fi
        if [ -z "$IOS_TEAM_ID" ]; then echo "IOS_TEAM_ID is missing"; exit 1; fi
        if [ -z "$MATCH_PASSWORD" ]; then echo "MATCH_PASSWORD is missing"; exit 1; fi
        if [ -z "$FASTLANE_SESSION" ]; then echo "FASTLANE_SESSION is missing"; exit 1; fi
        echo "All iOS secrets are present"
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
        
    - name: Build and deploy iOS
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      run: |
        bundle exec fastlane ios release

  deploy-ios-beta:
    name: Deploy iOS Beta
    runs-on: macos-latest
    if: |
      (github.event_name == 'workflow_dispatch' &&
       (inputs.target == 'beta' || inputs.target == 'auto') &&
       (inputs.ref == 'refs/heads/develop' || inputs.ref == 'refs/heads/Fastlane-integration')) ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       (github.event.workflow_run.head_branch == 'develop' ||
        github.event.workflow_run.head_branch == 'Fastlane-integration'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install CocoaPods
      run: |
        cd ios
        pod install
        
    - name: Setup Node.js for iOS build
      run: |
        # Create symlink for Node.js to fix React Native iOS build
        sudo ln -sf $(which node) /usr/local/bin/node
        node --version
        which node
        
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
        
    - name: Deploy iOS Beta
      env:
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
      run: |
        bundle exec fastlane ios beta

  deploy-android-beta:
    name: Deploy Android Beta
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' &&
       (inputs.target == 'beta' || inputs.target == 'auto') &&
       (inputs.ref == 'refs/heads/develop' || inputs.ref == 'refs/heads/Fastlane-integration')) ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       (github.event.workflow_run.head_branch == 'develop' ||
        github.event.workflow_run.head_branch == 'Fastlane-integration'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        bundler-cache: true
        
    - name: Install dependencies
      run: bundle install
        
    - name: Deploy Android Beta
      env:
        ANDROID_KEYSTORE_PATH: ${{ secrets.ANDROID_KEYSTORE_PATH }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
      run: |
        bundle exec fastlane android beta

