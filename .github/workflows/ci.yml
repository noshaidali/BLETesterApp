name: CI

on:
  push:
    branches: [ main, develop, Fastlane-integration ]
  pull_request:
    branches: [ main, develop, Fastlane-integration ]

permissions:
  contents: read
  actions: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
      
    - name: Build Android APK
      run: |
        cd android
        ./gradlew assembleDebug --no-daemon
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-debug-apk
        path: android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 7

  build-ios:
    name: Build iOS
    runs-on: macos-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.14.0'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Cache CocoaPods
      uses: actions/cache@v3
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
      
    - name: Install CocoaPods
      run: |
        cd ios
        pod install --repo-update
        
    - name: Setup Node.js for iOS build
      run: |
        # Create symlink for Node.js to fix React Native iOS build
        sudo ln -sf $(which node) /usr/local/bin/node
        node --version
        which node
        
    - name: Build iOS
      run: |
        cd ios
        xcodebuild -workspace BLETesterApp.xcworkspace -scheme BLETesterApp -configuration Debug -destination 'generic/platform=iOS Simulator' build -quiet
        
    - name: Upload iOS build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: ios/build/
        retention-days: 7

    - name: Trigger CD workflow
      if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/Fastlane-integration')
      uses: actions/github-script@v7
      with:
        script: |
          const ref = context.ref;
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'cd.yml',
            ref: ref.replace('refs/heads/', ''),
            inputs: { ref: ref, target: 'auto' }
          });

